{% set version = "2.0.14" %}

package:
  name: pywinpty
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/p/pywinpty/pywinpty-{{ version }}.tar.gz
  sha256: 18bd9529e4a5daf2d9719aa17788ba6013e594ae94c5a0c27e83df3278b0660e

build:
  number: 0
  skip: true  # [(not win) or py<38]
  script: 
    - {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation
    - cargo-bundle-licenses --format yaml --output "{{ SRC_DIR }}\THIRDPARTY.yml"

requirements:
  build:
    - {{ compiler('rust') }}
    - {{ compiler('cxx') }}
    - cargo-bundle-licenses
  host:
    - python
    - pip
    - maturin >=1.1,<2.0
    - winpty 0.4.3
  run:
    - python
    - {{ pin_compatible('winpty') }}

test:
  imports:
    - winpty
  requires:
    - pip
  commands:
    - pip check


about:
  home: https://github.com/spyder-ide/pywinpty
  license: MIT
  license_file: 
    - LICENSE.txt
    - THIRDPARTY.yml
  license_family: MIT
  summary: Pseudoterminals for Windows in Python
  description: |
    PyWinpty allows creating and communicating with Windows processes that
    receive input and print outputs via console input and output pipes.
    PyWinpty supports both the native ConPTY interface and the previous,
    fallback winpty library.
  doc_url: https://github.com/spyder-ide/pywinpty
  dev_url: https://github.com/spyder-ide/pywinpty

extra:
  recipe-maintainers:
    - blink1073
    - ccordoba12
    - andfoy
    - ocefpaf
